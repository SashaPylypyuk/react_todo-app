{"version":3,"sources":["Todo/Todo.js","TodoList/TodoList.js","Filter/Filter.js","App.js","index.js"],"names":["Todo","id","title","completed","checkedTodo","deletedTodo","key","className","cn","type","checked","onClick","htmlFor","TodoList","todos","toggleAll","map","todo","comleted","Filter","length","filter","filterState","clearCompleted","selected","App","state","filteredTodos","fil","setState","prevState","e","onKeyPressed","event","newTodo","newTodoId","push","onChangeInput","value","target","replace","this","placeholder","onChange","onKeyPress","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gUAIaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,YAAaC,EAAtC,EAAsCA,YAAtC,OAClB,wBAAIC,IAAKL,EAAIM,UAAWC,IAAG,CAAEL,eAC3B,yBAAKI,UAAU,QACb,2BACEE,KAAK,WACLF,UAAU,SACVG,QAASP,EACTQ,QAAS,kBAAMP,EAAYH,MAE7B,2BACEW,QAAO,eAAUX,IAGhBC,GAEH,4BACEO,KAAK,SACLF,UAAU,UACVI,QAAS,kBAAMN,EAAYJ,OAG/B,2BAAOQ,KAAK,OAAOF,UAAU,WCrBpBM,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOT,EAAV,EAAUA,YAAaU,EAAvB,EAAuBA,UAAWX,EAAlC,EAAkCA,YAAlC,OACtB,6BAASG,UAAU,QACjB,2BACEE,KAAK,WACLR,GAAG,aACHM,UAAU,aACVI,QAAS,kBAAMI,OAEjB,2BAAOH,QAAQ,cAAf,wBACA,wBAAIL,UAAU,aAEXO,EAAME,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CACEhB,GAAIgB,EAAKhB,GACTC,MAAOe,EAAKf,MACZC,UAAWc,EAAKC,SAChBd,YAAaA,EACbC,YAAaA,UCjBVc,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,YAAaC,EAAhC,EAAgCA,eAAhC,OACpB,4BAAQhB,UAAU,UAChB,0BAAMA,UAAU,cACba,EACA,IAFH,gBAKA,wBAAIb,UAAU,WACZ,4BACE,4BACEE,KAAK,SACLF,UAAWC,IAAG,CAAEgB,SAA0B,QAAhBF,IAC1BX,QAAS,kBAAMU,EAAO,SAHxB,QAQF,4BACE,4BACEd,UAAWC,IAAG,CAAEgB,SAA0B,WAAhBF,IAC1Bb,KAAK,SACLE,QAAS,kBAAMU,EAAO,YAHxB,WAQF,4BACE,4BACEd,UAAWC,IAAG,CAAEgB,SAA0B,cAAhBF,IAC1Bb,KAAK,SACLE,QAAS,kBAAMU,EAAO,eAHxB,eAUJ,4BACEZ,KAAK,SACLF,UAAU,kBACVI,QAAS,kBAAMY,MAHjB,qBCrCSE,EAAb,2MACEC,MAAQ,CACNxB,MAAO,GACPY,MAAO,GACPa,cAAe,GACfL,YAAa,OALjB,EAQED,OAAS,SAACO,GAAS,IACTd,EAAU,EAAKY,MAAfZ,MAER,OAAQc,GACN,IAAK,MACH,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BH,cAAeG,EAAUhB,MACzBQ,YAAa,UAEf,MAGF,IAAK,SACH,EAAKO,UAAS,SAAAC,GAAS,MAAK,CAC1BH,cAAeG,EAAUhB,MAAMO,QAAO,SAAAJ,GAAI,OAAKA,EAAKC,YACpDI,YAAa,aAEf,MAGF,IAAK,YACH,EAAKO,UAAS,SAAAC,GAAS,MAAK,CAC1BH,cAAeG,EAAUhB,MAAMO,QAAO,SAAAJ,GAAI,OAAIA,EAAKC,YACnDI,YAAa,gBAEf,MAGF,QACE,EAAKO,SAAS,CACZF,cAAc,YAAKb,GACnBQ,YAAa,UAvCvB,EA6CEjB,YAAc,SAACJ,GACb,EAAK4B,UAAS,SAAAC,GAAS,MAAK,CAC1BhB,MAAOgB,EAAUhB,MAAMO,QAAO,SAAAJ,GAAI,OAAIA,EAAKhB,KAAOA,SAEpD,EAAKoB,OAAO,EAAKK,MAAMJ,cAjD3B,EAoDEC,eAAiB,SAACQ,GAChB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BhB,MAAOgB,EAAUhB,MAAMO,QAAO,SAAAJ,GAAI,OAAKA,EAAKC,gBAE9C,EAAKG,OAAO,EAAKK,MAAMJ,cAxD3B,EA2DElB,YAAc,SAACH,GAAQ,IACba,EAAU,EAAKY,MAAfZ,MAERA,EAAMb,GAAIiB,UAAYJ,EAAMb,GAAIiB,SAChC,EAAKW,UAAS,SAAAC,GAAS,MAAK,CAC1BhB,MAAOgB,EAAUhB,UAEnB,EAAKO,OAAO,EAAKK,MAAMJ,cAlE3B,EAqEEU,aAAe,SAACC,GACI,UAAdA,EAAM3B,KACR,EAAK4B,QAAQ,EAAKR,MAAMxB,QAvE9B,EA2EEgC,QAAU,SAAChC,GAAW,IACZY,EAAU,EAAKY,MAAfZ,MACFqB,EAAY,EAAKT,MAAMZ,MAAMM,OAE/BlB,EAAMkB,SACRN,EAAMsB,KAAK,CACTnC,GAAIkC,EACJjC,QACAgB,UAAU,IAGZ,EAAKW,SAAS,CACZ3B,MAAO,KAET,EAAKmB,OAAO,EAAKK,MAAMJ,eAzF7B,EA6FEe,cAAgB,YAAiB,IACvBC,EADsB,EAAbC,OACTD,MAER,EAAKT,SAAS,CACZ3B,MAAOoC,EAAME,QAAQ,MAAO,OAjGlC,EAqGEzB,UAAY,WACV,EAAKc,UAAS,SAAAC,GAAS,MAAK,CAC1BhB,MAAOgB,EAAUhB,MAAME,KAAI,SAAAC,GAAI,sBAC1BA,EAD0B,CAE7BC,UAAWD,EAAKC,kBAGpB,EAAKG,OAAO,EAAKK,MAAMJ,cA5G3B,wEA+GY,IAAD,EAC8CmB,KAAKf,MAAlDxB,EADD,EACCA,MAAOyB,EADR,EACQA,cAAeL,EADvB,EACuBA,YAAaR,EADpC,EACoCA,MAE3C,OACE,6BAASP,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCACA,2BACEA,UAAU,WACVmC,YAAY,yBACZJ,MAAOpC,EACPyC,SAAUF,KAAKJ,cACfO,WAAYH,KAAKT,gBAIrB,kBAAC,EAAD,CACElB,MAAOa,EACPtB,YAAaoC,KAAKpC,YAClBD,YAAaqC,KAAKrC,YAClBW,UAAW0B,KAAK1B,YAElB,kBAAC,EAAD,CACEK,OAAQN,EAAMM,OACdC,OAAQoB,KAAKpB,OACbC,YAAaA,EACbC,eAAgBkB,KAAKlB,sBAzI/B,GAAyBsB,IAAMC,WCE/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.ff46c243.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const Todo = ({ id, title, completed, checkedTodo, deletedTodo }) => (\n  <li key={id} className={cn({ completed })}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        checked={completed}\n        onClick={() => checkedTodo(id)}\n      />\n      <label\n        htmlFor={`todo-${id}`}\n\n      >\n        {title}\n      </label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => deletedTodo(id)}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodo.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  checkedTodo: PropTypes.func.isRequired,\n  deletedTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = ({ todos, deletedTodo, toggleAll, checkedTodo }) => (\n  <section className=\"main\">\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onClick={() => toggleAll()}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <ul className=\"todo-list\">\n\n      {todos.map(todo => (\n        <Todo\n          id={todo.id}\n          title={todo.title}\n          completed={todo.comleted}\n          checkedTodo={checkedTodo}\n          deletedTodo={deletedTodo}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.string,\n      comleted: PropTypes.bool,\n    }),\n  ).isRequired,\n  deletedTodo: PropTypes.func.isRequired,\n  toggleAll: PropTypes.func.isRequired,\n  checkedTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const Filter = ({ length, filter, filterState, clearCompleted }) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {length}\n      {' '}\nactive todos\n    </span>\n    <ul className=\"filters\">\n      <li>\n        <button\n          type=\"button\"\n          className={cn({ selected: filterState === 'All' })}\n          onClick={() => filter('All')}\n        >\n          All\n        </button>\n      </li>\n      <li>\n        <button\n          className={cn({ selected: filterState === 'Active' })}\n          type=\"button\"\n          onClick={() => filter('Active')}\n        >\n          Active\n        </button>\n      </li>\n      <li>\n        <button\n          className={cn({ selected: filterState === 'Completed' })}\n          type=\"button\"\n          onClick={() => filter('Completed')}\n        >\n          Completed\n        </button>\n      </li>\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={() => clearCompleted()}\n    >\n    Clear completed\n    </button>\n  </footer>\n);\n\nFilter.propTypes = {\n  length: PropTypes.number.isRequired,\n  filter: PropTypes.func.isRequired,\n  filterState: PropTypes.string.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { TodoList } from './TodoList/TodoList';\nimport { Filter } from './Filter/Filter';\n\nexport class App extends React.Component {\n  state = {\n    title: '',\n    todos: [],\n    filteredTodos: [],\n    filterState: 'All',\n  }\n\n  filter = (fil) => {\n    const { todos } = this.state;\n\n    switch (fil) {\n      case 'All': {\n        this.setState(prevState => ({\n          filteredTodos: prevState.todos,\n          filterState: 'All',\n        }));\n        break;\n      }\n\n      case 'Active': {\n        this.setState(prevState => ({\n          filteredTodos: prevState.todos.filter(todo => !todo.comleted),\n          filterState: 'Active',\n        }));\n        break;\n      }\n\n      case 'Completed': {\n        this.setState(prevState => ({\n          filteredTodos: prevState.todos.filter(todo => todo.comleted),\n          filterState: 'Completed',\n        }));\n        break;\n      }\n\n      default: {\n        this.setState({\n          filteredTodos: [...todos],\n          filterState: 'All',\n        });\n      }\n    }\n  }\n\n  deletedTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n    this.filter(this.state.filterState);\n  }\n\n  clearCompleted = (e) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.comleted),\n    }));\n    this.filter(this.state.filterState);\n  }\n\n  checkedTodo = (id) => {\n    const { todos } = this.state;\n\n    todos[id].comleted = !todos[id].comleted;\n    this.setState(prevState => ({\n      todos: prevState.todos,\n    }));\n    this.filter(this.state.filterState);\n  }\n\n  onKeyPressed = (event) => {\n    if (event.key === 'Enter') {\n      this.newTodo(this.state.title);\n    }\n  }\n\n  newTodo = (title) => {\n    const { todos } = this.state;\n    const newTodoId = this.state.todos.length;\n\n    if (title.length) {\n      todos.push({\n        id: newTodoId,\n        title,\n        comleted: false,\n      });\n\n      this.setState({\n        title: '',\n      });\n      this.filter(this.state.filterState);\n    }\n  }\n\n  onChangeInput = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      title: value.replace(/^\\s/, ''),\n    });\n  }\n\n  toggleAll = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        comleted: !todo.comleted,\n      })),\n    }));\n    this.filter(this.state.filterState);\n  }\n\n  render() {\n    const { title, filteredTodos, filterState, todos } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={this.onChangeInput}\n            onKeyPress={this.onKeyPressed}\n          />\n        </header>\n\n        <TodoList\n          todos={filteredTodos}\n          deletedTodo={this.deletedTodo}\n          checkedTodo={this.checkedTodo}\n          toggleAll={this.toggleAll}\n        />\n        <Filter\n          length={todos.length}\n          filter={this.filter}\n          filterState={filterState}\n          clearCompleted={this.clearCompleted}\n        />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}