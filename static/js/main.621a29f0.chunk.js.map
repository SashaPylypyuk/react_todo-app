{"version":3,"sources":["TodoList/TodoList.js","Filter/Filter.js","App.js","index.js"],"names":["TodoList","todos","deletedTodo","toggleAll","checkedTodo","className","type","id","onClick","htmlFor","map","todo","index","key","checked","comleted","title","Filter","filter","filterState","clearCompleted","App","state","filteredTodos","fil","setState","prevState","e","onKeyPressed","event","newTodo","newTodoId","length","push","onChangeInput","value","target","replace","this","placeholder","onChange","onKeyPress","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.621a29f0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({ todos, deletedTodo, toggleAll, checkedTodo }) => (\n  <section className=\"main\">\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onClick={() => toggleAll()}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <ul className=\"todo-list\">\n\n      {todos.map((todo, index) => (\n        <li key={todos[index]}>\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              checked={todo.comleted}\n              onClick={() => checkedTodo(index)}\n            />\n            <label\n              htmlFor={`todo-${index}`}\n              className={todo.comleted ? '' : ''}\n            >\n              {todo.title}\n            </label>\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              onClick={() => deletedTodo(todo.id)}\n            />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.string,\n      comleted: PropTypes.bool,\n    }),\n  ).isRequired,\n  deletedTodo: PropTypes.func.isRequired,\n  toggleAll: PropTypes.func.isRequired,\n  checkedTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './Filter.css';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ filter, filterState, clearCompleted }) => (\n  <>\n    <ul className=\"filters\">\n      <li>\n        <button\n          className={filterState === 'All'\n            ? 'filters__active filters__button'\n            : 'filters__button'\n          }\n          type=\"button\"\n          onClick={() => filter('All')}\n        >\n          All\n        </button>\n      </li>\n\n      <li>\n        <button\n          className={filterState === 'Active'\n            ? 'filters__active filters__button'\n            : 'filters__button'\n          }\n          type=\"button\"\n          onClick={() => filter('Active')}\n        >\n          Active\n        </button>\n      </li>\n\n      <li>\n        <button\n          className={filterState === 'Completed'\n            ? 'filters__active filters__button'\n            : 'filters__button'\n          }\n          type=\"button\"\n          onClick={() => filter('Completed')}\n        >\n          Completed\n        </button>\n      </li>\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={() => clearCompleted()}\n    >\n    Clear completed\n    </button>\n  </>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.func.isRequired,\n  filterState: PropTypes.string.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { TodoList } from './TodoList/TodoList';\nimport { Filter } from './Filter/Filter';\n\nexport class App extends React.Component {\n  state = {\n    title: '',\n    todos: [],\n    filteredTodos: [],\n    filterState: 'All',\n  }\n\n  filter = (fil) => {\n    const { todos } = this.state;\n\n    switch (fil) {\n      case 'All': {\n        this.setState(prevState => ({\n          filteredTodos: prevState.todos,\n          filterState: 'All',\n        }));\n        break;\n      }\n\n      case 'Active': {\n        this.setState(prevState => ({\n          filteredTodos: prevState.todos.filter(todo => !todo.comleted),\n          filterState: 'Active',\n        }));\n        break;\n      }\n\n      case 'Completed': {\n        this.setState(prevState => ({\n          filteredTodos: prevState.todos.filter(todo => todo.comleted),\n          filterState: 'Completed',\n        }));\n        break;\n      }\n\n      default: {\n        this.setState({\n          filteredTodos: [...todos],\n          filterState: 'All',\n        });\n      }\n    }\n  }\n\n  deletedTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n    this.filter(this.state.filterState);\n  }\n\n  clearCompleted = (e) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.comleted),\n    }));\n    this.filter(this.state.filterState);\n  }\n\n  checkedTodo = (id) => {\n    const { todos } = this.state;\n\n    todos[id].comleted = !todos[id].comleted;\n    this.setState(prevState => ({\n      todos: prevState.todos,\n    }));\n  }\n\n  onKeyPressed = (event) => {\n    if (event.key === 'Enter') {\n      this.newTodo(this.state.title);\n    }\n  }\n\n  newTodo = (title) => {\n    const { todos } = this.state;\n    const newTodoId = this.state.todos.length;\n\n    if (title.length) {\n      todos.push({\n        id: newTodoId,\n        title,\n        comleted: false,\n      });\n\n      this.setState({\n        filteredTodos: [...todos],\n        title: '',\n      });\n    }\n  }\n\n  onChangeInput = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      title: value.replace(/^\\s/, ''),\n    });\n  }\n\n  toggleAll = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        comleted: !todo.comleted,\n      })),\n    }));\n    this.filter(this.state.filterState);\n  }\n\n  render() {\n    const { title, filteredTodos, filterState } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={this.onChangeInput}\n            onKeyPress={this.onKeyPressed}\n          />\n        </header>\n\n        <TodoList\n          todos={filteredTodos}\n          deletedTodo={this.deletedTodo}\n          checkedTodo={this.checkedTodo}\n          toggleAll={this.toggleAll}\n        />\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {this.state.todos.length}\n          </span>\n          <Filter\n            filter={this.filter}\n            filterState={filterState}\n            clearCompleted={this.clearCompleted}\n          />\n        </footer>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}